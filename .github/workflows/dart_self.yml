name: Dart CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  build_number:
    runs-on: self-hosted
    steps:
    - name: Generate build number
      uses: einaregilsson/build-number@v2 
      id: buildnumber
      with:
        token: ${{secrets.github_token}}        
    - name: Print new build number
      run: echo "Build number is $BUILD_NUMBER"
    - name: Print GITHUB_RUN_NUMBER build number
      run: echo "GITHUB_RUN_NUMBER is $GITHUB_RUN_NUMBER"
      
    - name: Upload build number
      uses: actions/upload-artifact@v1
      with:
        name: BUILD_NUMBER
        path: BUILD_NUMBER

  build_web:
    needs: [build_number]

    runs-on: self-hosted
    
    steps:
    - uses: actions/checkout@v2
    - name: Running flutter doctor
      run: flutter doctor
    - name: Enable web
      run: flutter config --enable-web
    - name: Install dependencies
      run: flutter pub get
    - name: Download build number
      uses: actions/download-artifact@v1
      with:
        name: BUILD_NUMBER
    - name: Restore build number
      id: buildnumber
      uses: einaregilsson/build-number@v2 

    - name: Change version
      run: sh _bump.sh $GITHUB_REF ${{ steps.buildnumber.outputs.build_number }}
    - name: Build web release
      run: flutter build web --release
    - name: GitHub Pages
      uses: crazy-max/ghaction-github-pages@v1.4.1
      with:
        build_dir: build/web
      env:
        GITHUB_TOKEN: ${{ secrets.ci_token }}

  build_mac_os:
    needs: [build_number]

    runs-on: self-hosted
    
    steps:
    - uses: actions/checkout@v2

    - name: Running flutter doctor
      run: flutter doctor
    - name: Enable macos
      run: flutter config --enable-macos-desktop
    - name: Install dependencies
      run: flutter pub get

    - name: Download build number
      uses: actions/download-artifact@v1
      with:
        name: BUILD_NUMBER
    - name: Restore build number
      id: buildnumber
      uses: einaregilsson/build-number@v2 
    - name: Print GITHUB_RUN_NUMBER build number
      run: echo "GITHUB_RUN_NUMBER is $GITHUB_RUN_NUMBER"

    - name: Change version
      run: sh _bump.sh $GITHUB_REF ${{ steps.buildnumber.outputs.build_number }}
    - name: Get application version
      run: echo "::set-output name=app_ver::" "$(flutter pub run pubspec_semver:get_ver)"

    - name: Install create-dmg
      run: brew install create-dmg

    - name: Build macos release
      run: flutter build macos --release

    - name: Build dmg
      run: sh _dmg.sh

    - name: Upload artifact
      uses: actions/upload-artifact@v1.0.0
      with:
        name: macos-dmg
        path: release/macos/

  distribute:
    needs: [build_number, build_mac_os]
    runs-on: self-hosted
    steps:
     
      - uses: actions/checkout@v1

      - name: Download artifact
        uses: actions/download-artifact@v1.0.0
        with:
          name: macos-dmg
          path: release/macos/

      - name: Download build number
        uses: actions/download-artifact@v1
        with:
          name: BUILD_NUMBER
      - name: Restore build number
        id: buildnumber
        uses: einaregilsson/build-number@v2 
        
      - name: Change version
        run: sh _bump.sh $GITHUB_REF ${{ steps.buildnumber.outputs.build_number }}
      - name: Get application version
        id: app_ver
        run: echo "::set-output name=app_ver::" "$(flutter pub run pubspec_semver:get_ver)"
        
      # https://opensource.com/article/19/5/python-3-default-mac
      # pip install PyYAML
      - name: Read Configuration
        id: dist_config
        run: |
          destinations=$(echo $GITHUB_REF | python3 .github/workflows/lib/read_dist_config.py "destinations")
          notify_testers=$(echo $GITHUB_REF | python3 .github/workflows/lib/read_dist_config.py "notify_testers")
          echo "::set-output name=destinations::"${destinations//\'}""
          echo "::set-output name=notify_testers::"${notify_testers//\'}""

      - name: Create a Release
        id: create-release
        uses: actions/create-release@v1
        env:
            GITHUB_TOKEN: ${{ secrets.ci_token }}
        with:
            tag_name: v${{ steps.app_ver.outputs.app_ver  }} ${{ steps.dist_config.outputs.release_type }}
            release_name: ${{ steps.dist_config.outputs.release_type }} v${{ steps.app_ver.outputs.app_ver  }} 
            body: ${{ env.COMMIT_MESSAGE }}
            draft: ${{ steps.dist_config.outputs.draft }}
            prerelease: ${{ steps.dist_config.outputs.prerelease }}

      - name: Zip Build
        run: zip -r macos/build.zip release/macos/

      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.ci_token }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: macos/build.zip
          asset_name: macos-build
          asset_content_type: application/zip
